<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxATEhUTExIVFhUXFxYVGBYYGBUYFRUWGRcWFhcXFhUY
        HSggGBolHRUVITEhJSktLy4vFx8zODMtNygtLiv/2wBDAQoKCg4NDhsQEBstJR8mLS0rLS0yLS0vLS0t
        LS0tLS0vLS0tLS0tLS0tLS0tLS0tLSstLS0tLS0tLS0tLS0tLS3/wAARCADhAOEDASIAAhEBAxEB/8QA
        HAABAAIDAQEBAAAAAAAAAAAAAAUGAwQHAggB/8QAQRAAAQMCAgcFBQYFAwQDAAAAAQACAwQRBSEGEjFB
        UWFxEyKBkaEHMlKxwRQzQnLR4SNigpLwJKLxFbLC0jRzg//EABsBAQADAQEBAQAAAAAAAAAAAAADBAUC
        BgEH/8QAOBEAAgECBAIJAwEGBwAAAAAAAAECAxEEEiExQVEFEzJhcYGRsfAiodHBIzNCUmLhBhVDcpLC
        8f/aAAwDAQACEQMRAD8A7iiIgCIiAIiIAiIgCIiAIiIAtWsrYom68sjI28XODR5neoLTPSltGwNYA+d/
        uM4fzu5D1XL66jmmPazymR555N5NG4dFXq4hQ0WrJ6VBzV3oi8Y57TaeM6tOwzO+I3azw3lVSr03xKY5
        SiIcGAfM3PyVXqqQtNwv2CZUp16kuPz3+5bhRguBNfaKp5u+snP/AOj7eV7LPFTSbqmcHk9w+qjoJlIw
        SqHPLmyXKuRvU9TXx/d1039Z1x/vupSn02r4fvY45m8W9136EqNga52wErO6kcRmPULqNaa2k/njc5dO
        L3RcsF03oqghuv2Uhy1JO7c8A7YSrOuGYphLrE6h62v52W9oxprPSkRykyQ7LHN7B/KTtHIq3TxfCfqV
        qmF/l9DsqLUw+ujmjbJE4OY4XBHyPA8ltq8UwiIgCIiAIiIAiIgCIiAIiIAiIgCIiALWrqpkUb5XmzWN
        c9x5NFz8lsqj+1qv7Oi7MHOV7Wn8re+fUN81xOWWLZ1COaSRzWuxN9RM+ok955yHwN/C0dAtujrbZHYo
        KGTJbbHrHbbd2ayVicqKZrxdqgKyiLTcK0UcDIYu1mdbK9uHAW3laX2map+4gY1nxv3/AOcrr5mS3PmU
        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
</value>
  </data>
</root>